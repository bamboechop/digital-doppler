---
import StreamOverlayLayout from '../layouts/StreamOverlayLayout.astro';
import SingleNote from '../components/SingleNote.astro';
import { dbClient } from '../lib/db.client';

if(Astro.url.searchParams.size !== 2) {
  return Astro.redirect('/');
}

const secret = Astro.url.searchParams.get('secret');

if(secret !== import.meta.env.STREAM_OVERLAY_SECRET) {
  return Astro.redirect('/');
}

const userId = Astro.url.searchParams.get('user-id');

const dbNotes = await dbClient.notes.findMany({
  where: {
    status: 'in-progress',
  },
});
const myOpenNotes = dbNotes.filter((note) => note.user_id === parseInt(userId, 10));
const viewerOpenNotes = dbNotes.filter((note) => note.user_id !== parseInt(userId, 10));
---
<StreamOverlayLayout>
  <div class="bg-stone-700">
    {myOpenNotes.map((note) => (
      <SingleNote
        displayName="TODO"
        key={note.note_id}
        text={note.text}
        type="stream"
        userId={note.user_id} />
    ))}
    <div class="splide">
      <div class="splide__track">
        <ul class="splide__list">
          {viewerOpenNotes.map((note) => (
            <li class="splide__slide">
              <SingleNote
                displayName="TODO"
                key={note.note_id}
                text={note.text}
                type="stream"
                userId={note.user_id} />
            </li>
          ))}
        </ul>
      </div>
    </div>
  </div>
</StreamOverlayLayout>

<script>
  import Splide from '@splidejs/splide';
  import '@splidejs/splide/dist/css/splide.min.css';

  new Splide('.splide', {
    autoplay: true,
    speed: 2000,
    type  : 'fade',
    rewind: true,
  }).mount();

  /*
  TODO Custom animation
  https://splidejs.com/guides/transition/

@keyframes fadeOutIn {
  0%, 60% {
    opacity: 1;
  }
  90%, 100% {
    opacity: 0;
  }
}

.your-element {
  animation: fadeOutIn 35s infinite;
}
  */
</script>
