---
import { Image } from 'astro:assets';
import LogInLayout from '../layouts/LogInLayout.astro';
import type { ErrorType } from '../common/types/index.type';
import { XCircle } from 'lucide-astro';
import IsLive from '../components/IsLive.astro';
import IsNotLive from '../components/IsNotLive.astro';
import SingleNote from '../components/SingleNote.astro';

let errorMessage: string;

const { isOnline } = Astro.locals;

if(Astro.url.searchParams.size > 0) {
  const errorType = Astro.url.searchParams.get('error') as ErrorType;
  switch(errorType) {
    case 'twitch-error':
      errorMessage = 'Ups, da ging leider mit Twitch etwas schief! ðŸ˜… Bitte melde dich erneut an.';
      break;
    default:
  }
}
---

<LogInLayout title="login/coworking/bamboechop">
  <h1 class="sr-only">Coworking mit bamboechop</h1>
    <Image
      alt="Coworking with bamboechop logo"
      class="shape-round -rotate-12 drop-shadow-logo z-[2]"
      height="220"
      loading="eager"
      src="/logo.png"
      width="220" />
  <section class="bg-[#102269] bg-background-black-linen flex flex-col gap-4 items-center outline-indigo-400 outline-dashed outline-2 outline-offset-[-6px] rounded-2xl px-8 xs:px-12 md:px-24 pt-5 md:pt-10 pb-7 md:pb-14 shadow-lg h-min font-sans relative z-[2]">
    <p class="text-center text-2xl font-extrabold mb-6">Coworking mit <span class="my-text">bamboechop</span></p>
    <a
      class="bg-[#9146ff] w-max text-white font-bold py-2 px-4 rounded transition-all hover:underline hover:underline-offset-[3px]"
      href={`https://id.twitch.tv/oauth2/authorize?client_id=${import.meta.env.PUBLIC_TWITCH_CLIENT_ID}&redirect_uri=${import.meta.env.PUBLIC_TWITCH_REDIRECT_URI}&response_type=${import.meta.env.PUBLIC_TWITCH_RESPONSE_TYPE}&scope=${encodeURIComponent(import.meta.env.PUBLIC_TWITCH_SCOPE)}&state=${import.meta.env.PUBLIC_TWITCH_STATE}`}>
      Mit Twitch anmelden
    </a>
    {!isOnline && <IsNotLive />}
    {isOnline && <IsLive />}
    <Image
      alt=""
      class="absolute hidden md:block bottom-[20px] right-[-75px] -rotate-[36deg] drop-shadow-stationery"
      height="74px"
      src="/stationeries/rubber-eraser.png"
      width="215px" />
  </section>
  <SingleNote
    class="z-[1]"
    text="Alleine arbeiten kann sooooo langweilig sein. Melde dich mit deinem Twitch Account an, erstelle ein Todo und lass bamboechop und seine Zuseher wissen woran DU heute arbeitest." />
  {errorMessage && (
    <div
      class="absolute bottom-2 right-2 cursor-pointer bg-red-700 flex flex-col gap-1 max-w-96 px-2 pt-2 pb-4 rounded-lg shadow-lg text-base toast"
      title="Fehlermeldung schlieÃŸen">
      <XCircle class="self-end" size="20" />
      <p class="px-2">{errorMessage}</p>
    </div>
  )}
</LogInLayout>

<script>
  const toast = document.querySelector('.toast');

  if(toast) {
    toast.addEventListener('click', () => {
      toast.remove();
    });
  }
</script>

<style lang="scss">
  .loader {
    width: 48px;
    height: 48px;
    position: relative;

    &::after,
    &::before {
      box-sizing: border-box;
      width: 48px;
      height: 48px;
      border-radius: 50%;
      border: 4px solid #9146ff;
      position: absolute;
      left: 0;
      top: 0;
      animation: animloader 2s linear infinite;
    }

    &::after {
      transform: scale(0);
      animation-delay: 1s;
      content: '';
    }

    &::before {
      content: '';
    }
  }

  .my-text {
    --accent: 170, 204, 0;
    --accent-light: 239, 250, 204;
    --accent-dark: 78, 101, 10;
    background-image: linear-gradient( 45deg, rgb(var(--accent)), rgb(var(--accent-light)) 15%, white 20%);
    background-position: 0;
    background-size: 400%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .shape-round {
    shape-outside: circle();
  }

  @keyframes animloader {
    0% {
      transform: scale(0);
      opacity: 1;
    }
    100% {
      transform: scale(1);
      opacity: 0;
    }
  }
</style>
