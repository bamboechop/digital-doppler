---
import LogInLayout from '../layouts/LogInLayout.astro';
import type { ErrorType } from '../common/types/index.type';
import { XCircle } from 'lucide-astro';

if(Astro.cookies.has('twitch-token')) {
  return Astro.redirect('/dashboard');
}

let errorMessage: string;

if(Astro.url.searchParams.size > 0) {
  const errorType = Astro.url.searchParams.get('error') as ErrorType;
  switch(errorType) {
    case 'twitch-error':
      errorMessage = 'Ups, da ging leider mit Twitch etwas schief! ðŸ˜… Bitte melde dich erneut an.';
      break;
    default:
  }
}
---

<LogInLayout title="login/coworking/bamboechop">
  <section class="bg-[#102269] bg-background-black-linen outline-indigo-400 outline-dashed outline-2 outline-offset-[-6px] rounded-2xl px-24 py-16 shadow-lg h-min font-sans relative">
    <h1 class="sr-only">Coworking mit bamboechop</h1>
    <a
      class="bg-[#9146ff] text-white font-bold py-2 px-4 rounded transition-all hover:underline hover:underline-offset-[3px]"
      href={`https://id.twitch.tv/oauth2/authorize?client_id=${import.meta.env.PUBLIC_TWITCH_CLIENT_ID}&redirect_uri=${import.meta.env.PUBLIC_TWITCH_REDIRECT_URI}&response_type=${import.meta.env.PUBLIC_TWITCH_RESPONSE_TYPE}&scope=${encodeURIComponent(import.meta.env.PUBLIC_TWITCH_SCOPE)}&state=${import.meta.env.PUBLIC_TWITCH_STATE}`}>
      Mit Twitch anmelden
    </a>
  </section>
  {errorMessage && (
    <div
      class="absolute bottom-2 right-2 cursor-pointer bg-red-700 flex flex-col gap-1 max-w-96 px-2 pt-2 pb-4 rounded-lg shadow-lg text-base toast"
      title="Fehlermeldung schlieÃŸen">
      <XCircle class="self-end" size="20" />
      <p class="px-2">{errorMessage}</p>
    </div>
  )}
</LogInLayout>

<script>
  const toast = document.querySelector('.toast');

  if(toast) {
    toast.addEventListener('click', () => {
      toast.remove();
    });
  }
</script>

<style lang="scss">
  .loader {
    width: 48px;
    height: 48px;
    position: relative;

    &::after,
    &::before {
      box-sizing: border-box;
      width: 48px;
      height: 48px;
      border-radius: 50%;
      border: 4px solid #9146ff;
      position: absolute;
      left: 0;
      top: 0;
      animation: animloader 2s linear infinite;
    }

    &::after {
      transform: scale(0);
      animation-delay: 1s;
      content: '';
    }

    &::before {
      content: '';
    }
  }

  @keyframes animloader {
    0% {
      transform: scale(0);
      opacity: 1;
    }
    100% {
      transform: scale(1);
      opacity: 0;
    }
  }
</style>
