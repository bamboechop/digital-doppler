---
import { Image } from 'astro:assets';
import SingleNote from './SingleNote.astro';

interface Props {
  completedNotes: any[];
  displayName: string;
  openNotes: any[];
  userId: string;
}
const { completedNotes, displayName, openNotes, userId } = Astro.props;
---

<section class="flex flex-col p-4">
  <section class="[border-image:url('/bg/border.png');] [border-image-slice:255!important;] single-note-box bg-neutral-800 bg-background-fabric border-[24px] border-amber-950 rounded-2xl flex flex-col gap-4 pb-4 shadow-2xl z-[1]">
    <header class="bg-yellow-900 bg-background-pattern max-w-max p-2 font-bold">
      Heutige Todos (<span id="open-notes-amount">{openNotes.length}</span>/3)
    </header>
    <section
      class="flex flex-wrap gap-2 px-6"
      id="open-notes">
      {openNotes.length < 3 && <SingleNote
        type="new"
        displayName={displayName}
        userId={userId} />}
      {openNotes.map((note) => (
        <SingleNote
          displayName={displayName}
          noteId={note.note_id}
          text={note.text}
          type={note.status}
          userId={note.user_id} />
      ))}
    </section>
  </section>
  <Image
    alt=""
    class="self-end my-1 scale-x-[-1] drop-shadow-stationery"
    height="32px"
    src="/stationeries/pencil-gray.png"
    width="666px" />
  <section class="[border-image:url('/bg/border.png');] [border-image-slice:255!important;] single-note-box bg-lime-700 bg-background-fabric border-[24px] border-amber-950 rounded-2xl flex flex-col gap-4 pb-4 basis-full shadow-2xl">
    <header class="bg-yellow-900 bg-background-pattern max-w-max p-2 font-bold">
      Abgeschlossene Todos (<span id="closed-notes-amount">{completedNotes.length}</span>)
    </header>
    <section
      class="cursor-zoom-in flex flex-wrap gap-2 grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 2xl:grid-cols-6 h-full px-6 relative"
      id="completed-notes"
      title="Alle Todos ansehen">
      {completedNotes.map((note) => (
        <SingleNote
          displayName={displayName}
          noteId={note.note_id}
          text={note.text}
          type={note.status} />
      ))}
      <div
        class="bg-[rgba(0,0,0,.5)] completed-notes-container hidden fixed bottom-0 left-0 right-0 top-0 -z-[1]"
        title="Alle Todos schließen"></div>
    </section>
  </section>
</section>

<script>
  function handleClick() {
    const sectionStyle = completedNotesSection.style;
    const notes = completedNotesSection.querySelectorAll('[id^=note]');

    if(completedNotesSection.classList.contains('completed-notes-section--open')) {
      completedNotesSection.classList.remove('completed-notes-section--open');
      completedNotesSection.title = 'Alle Todos ansehen';

      sectionStyle.cursor = '';
      sectionStyle.display = '';
      sectionStyle.gap = '';
      sectionStyle.gridAutoRows = '';
      sectionStyle.height = '';
      sectionStyle.inset = '';
      sectionStyle.justifyItems = '';
      sectionStyle.overflow = '';
      sectionStyle.padding = '';
      sectionStyle.position = '';
      sectionStyle.zIndex = '';

      completedNotesContainer.classList.add('hidden');
      completedNotesSection.title = 'Alle Todos ansehen';

      notes.forEach((note: HTMLElement) => {
        note.querySelector('textarea').style.overflow = 'hidden';
        note.style.cursor = '';
        note.style.pointerEvents = '';
        note.style.position = 'absolute';
        note.style.transform = `rotate(${Math.floor(Math.random() * 21) - 10}deg)`;
      });
    } else {
      completedNotesSection.classList.add('completed-notes-section--open');
      completedNotesSection.title = '';

      sectionStyle.cursor = 'zoom-out';
      sectionStyle.display = 'grid';
      sectionStyle.justifyItems = 'center';
      sectionStyle.gap = '1rem';
      sectionStyle.gridAutoRows = 'min-content';
      sectionStyle.height = '100dvh';
      sectionStyle.inset = '0';
      sectionStyle.overflow = 'auto';
      sectionStyle.padding = '32px 64px';
      sectionStyle.position = 'fixed';
      sectionStyle.zIndex = '1';

      completedNotesContainer.classList.remove('hidden');
      completedNotesContainer.title = 'Alle Todos schließen';

      notes.forEach((note: HTMLElement) => {
        note.querySelector('textarea').style.overflow = 'auto';
        note.style.cursor = 'default';
        note.style.pointerEvents = 'all';
        note.style.position = 'static';
        note.style.transform = 'none';
      });
    }
  }

  const completedNotesContainer = document.querySelector('.completed-notes-container') as HTMLDivElement;
  const completedNotesSection = document.querySelector('#completed-notes') as HTMLElement;

  completedNotesSection.addEventListener('click', handleClick);
</script>

<style lang="scss">
  .single-note-box {
    position: relative;

    &::before {
      bottom: 0;
      box-shadow: inset 0 0 50px 15px rgba(0,0,0,0.5);
      content: '';
      left: 0;
      pointer-events: none;
      position: absolute;
      right: 0;
      top: 0;
      z-index: 1;
    }
  }
</style>
