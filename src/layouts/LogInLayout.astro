---
interface Props {
  title: string;
}

const { title } = Astro.props;

let backgroundImageUrl = Astro.cookies.get('background-image-url')?.value ?? '';

if(!Astro.url.searchParams.has('error')) {
  const backgrounds = ['/bg/1.png', '/bg/2.png', '/bg/3.png', '/bg/4.png', '/bg/5.png', '/bg/6.png', '/bg/7.png'];
  backgroundImageUrl = `url('${backgrounds[Math.floor(Math.random() * backgrounds.length)]}')`;
  Astro.cookies.set('background-image-url', backgroundImageUrl);
}
---

<!doctype html>
<html lang="de">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="bg-[#230f01]">
    <main class="flex items-center justify-center min-h-dvh text-white text-xl">
      <slot />
    </main>
  </body>
</html>

<style define:vars={{ backgroundImageUrl }} is:global lang="scss">
  body {
    background-image: var(--backgroundImageUrl);
  }
</style>
